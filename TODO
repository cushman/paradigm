To do:

now:
- switch from using binding to globals-- @ should be request context
- move sessions stuff into middleware, build middleware system

later:
- print errors from compiling client-side scripts
- minify JS being sent to the client (try UglifyJS, is node and we like node)
- saying "Done!" is massively deceptive
+ DB support- authentication layer for client-side db calls
- look into ~/node-packages, that's a thing

much later:
- function routing can be done by a middleware
- figure out how to build unwrapped coffeescript
- parse template files for shared functions
- add a dev environment that:
    - issues a client-side hook that watches the server for updates and refreshes
    - doesn't compile client-side code, issues a client-side cs compiler instead
    - (or just doesn't minify)
    - uses paperboy to serve static files
    - ...
- hold template files in memory (maybe?), remove paperboy except in dev

always:
- search project for TODO, I forget sometimes